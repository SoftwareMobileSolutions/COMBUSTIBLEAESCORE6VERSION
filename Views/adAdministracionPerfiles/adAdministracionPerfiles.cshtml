@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = null;
    string guid = System.Guid.NewGuid().ToString().Replace("-", ""),
    DropDownList_Perfiles = "DropDownList_Perfiles_" + guid,
    TXT_Perfil = "TXT_Perfil_" + guid,
    Input_NombrePerfil = "Input_NombtePerifl_" + guid,
    BTN_GuardarPerfiles = "BTN_GuardarPerfiles_" + guid,
    Treeview_Perfiles = "Treeview_Perfiles_" + guid;
}
<section>
    <div class="container-fluid card p-3">
        <div class="row">
            <div class="col-lg-12">
                <h2 class="text-center">Administración de perfiles</h2>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-lg-1">
            </div>
            <div class="col-lg-3">
                <h5 class="text-center">Perfiles</h5>
                <input id="@{@DropDownList_Perfiles}"/>
            </div>

            <div class="col-lg-4">
                <h5 class="text-center" id="@{@TXT_Perfil}">Ingrese el nombre del nuevo perfil</h5>
                <input id="@{@Input_NombrePerfil}" class="form-control"/>
            </div>
            <div class="col-lg-3 d-flex align-items-end">
                <button id="@{@BTN_GuardarPerfiles}" class="btn btn-success w-100"> <i class="bi bi-floppy"></i> Guardar</button>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-lg-10 offset-lg-1 p-3 rounded" style=" background:#e3e6e8">
                <div id="@{@Treeview_Perfiles}" class="W-100">

                </div>
            </div>
        </div>

    </div>
</section>
<style>
    .k-dropdownlist{
        height:38px;
    }

    </style>
<script>
    (function () {
        $.extend({
            ModuloAdministracionPerfiles:{
                Arbol: {
                    Cargar: function () {
                        var _this = this
                        $("#@{@Treeview_Perfiles}").kendoTreeView({
                            checkboxes: {
                                checkChildren: true
                            },
                            selectable: true
                        });
                        _this.Data(2)

                    },
                    Data: function (_PefilID) {
                        $.get('@Url.Action("ObtenerModulos", "adAdministracionPerfiles")', { PefilID: _PefilID }, function (modulos) {

                            //console.log(modulos)
                            /*let NodosAbuelos =
                                modulos.filter(
                                    modulo => modulo.nivel === 0
                                ).map(
                                    modulo => ({
                                        id: modulo.moduloID,
                                        text: modulo.nombre,
                                        COD: modulo.codigo,
                                        expanded: true,
                                        items: []
                                    })
                                );

                            let NodosPadres =
                                modulos.filter(
                                    modulo => modulo.nivel === 1
                                ).map(
                                    modulo => ({
                                        id: modulo.moduloID,
                                        text: modulo.nombre,
                                        COD: modulo.codigo,
                                        PARENT: modulo.parent,
                                        expanded: true,
                                        checked: modulo.asiganado,
                                        items: []
                                    })
                                );

                            let NodosHijos =
                                modulos.filter(
                                    modulo => modulo.nivel === 2
                                ).map(
                                    modulo => ({
                                        id: modulo.moduloID,
                                        text: modulo.nombre,
                                        checked: modulo.asiganado,
                                        COD: modulo.codigo,
                                        PARENT: modulo.parent,
                                        GrandParent: modulo.grandParent
                                    })
                                );

                            NodosAbuelos.forEach(NodoAbuelo => {
                                NodosPadres.forEach(NodoPadre => {
                                    if (NodoAbuelo.COD === NodoPadre.PARENT) {
                                        NodoAbuelo.items.push(NodoPadre)
                                    }
                                    var items = []
                                    NodosHijos.forEach(NodoHijo => {
                                        if (NodoPadre.COD === NodoHijo.PARENT) {
                                            items.push(NodoHijo)

                                        }

                                    })
                                    if (items.length > 0) {
                                        NodoPadre.items = items
                                    } else {
                                        delete NodoPadre.items;
                                        delete NodoPadre.expanded;
                                    }
                                })
                            })

                            console.log(NodosAbuelos)*/
                            let NodosAbuelos = modulos.filter(modulo => modulo.nivel === 0).map(modulo => ({
                                id: modulo.moduloID,
                                text: modulo.nombre,
                                COD: modulo.codigo,
                                expanded: true,
                                items: []
                            }));

                            let NodosPadres = modulos.filter(modulo => modulo.nivel === 1).map(modulo => ({
                                id: modulo.moduloID,
                                text: modulo.nombre,
                                COD: modulo.codigo,
                                PARENT: modulo.parent,
                                expanded: true,
                                checked: modulo.asiganado,
                                items: []
                            }));

                            let NodosHijos = modulos.filter(modulo => modulo.nivel === 2).map(modulo => ({
                                id: modulo.moduloID,
                                text: modulo.nombre,
                                checked: modulo.asiganado,
                                COD: modulo.codigo,
                                PARENT: modulo.parent,
                                GrandParent: modulo.grandParent
                            }));

                            NodosPadres.forEach(NodoPadre => {
                                NodoPadre.items = NodosHijos.filter(NodoHijo => NodoPadre.COD === NodoHijo.PARENT);
                                if (NodoPadre.items.length === 0) {
                                    delete NodoPadre.items;
                                    delete NodoPadre.expanded;
                                }
                            });

                            NodosAbuelos.forEach(NodoAbuelo => {
                                NodoAbuelo.items = NodosPadres.filter(NodoPadre => NodoAbuelo.COD === NodoPadre.PARENT);
                            });

                            $("#@{@Treeview_Perfiles}").data("kendoTreeView").dataSource.data(NodosAbuelos);
                        })
                    },
                    obtnerIDS: function (nodes, checkedNodes) {
                        for (var i = 0; i < nodes.length; i++) {
                            if (nodes[i].hasChildren) {
                                $.ModuloAdministracionPerfiles.Arbol.obtnerIDS(nodes[i].children.view(), checkedNodes)
                            } else if (nodes[i].checked) {
                                checkedNodes.push(nodes[i].id);
                            }
                        }
                    },
                    BTN_Guardar: function () {
                        var _this = this
                        $("#@{@BTN_GuardarPerfiles}").on("click", function () {
                            let ID = $("#@{@DropDownList_Perfiles}").data("kendoDropDownList").value()
                            let Input_NombrePerfil =  $("#@{@Input_NombrePerfil}").val()
                            //console.log(ID)
                            if (ID === "0"){
                                if (_this.validaciones(Input_NombrePerfil) === true) {
                                    //$._combustible.alert("success", "Registra", "XD")
                                    $.post('@Url.Action("CrearPerfil", "adAdministracionPerfiles")', { NombrePefil: Input_NombrePerfil }, function (resultado) {
                                        resultado = resultado[0]
                                        //$._combustible.alert("success", "Cambia modulos", resultado.resultado)
                                        if (resultado.bandera === 1){
                                            $._combustible.alert("success", "Creacion exitosa", resultado.resultado)
                                            $.ModuloAdministracionPerfiles.DropDownList.Data()
                                        }else{
                                            $._combustible.alert("error", "Error", resultado.resultado)
                                            
                                        }
                                    })
                                }
                            }else {
                                if (_this.validaciones(Input_NombrePerfil) === true) { 
                                    var checkedNodes = [];
                                    _this.obtnerIDS($("#@{@Treeview_Perfiles}").data("kendoTreeView").dataSource.view(), checkedNodes)
                                    //$._combustible.alert("success", "Cambia modulos", checkedNodes.join(","))

                                    let arg = {
                                        PerfilID: parseInt(ID),
                                        NombrePerfil_Nuevo: Input_NombrePerfil,
                                        ModulosID: checkedNodes.join(",")
                                    }

                                    $.post('@Url.Action("ActualizarPerfilXModulos","adAdministracionPerfiles")',arg, function (resultado) {
                                        resultado = resultado[0]
                                        //$._combustible.alert("success", "Cambia modulos", resultado.resultado)
                                        if (resultado.bandera === 1) {
                                            $._combustible.alert("success", "Actulizacion exitosa", resultado.resultado)
                                            $.ModuloAdministracionPerfiles.DropDownList.Data()
                                            $.ModuloAdministracionPerfiles.Arbol.Data(2)
                                        } else {
                                            $._combustible.alert("error", "Error", resultado.resultado)

                                        }
                                    });
                                }


                            }
                            
                        });
                    },
                    validaciones: function(_NombrePerfil){
                        //console.log("XD")
                        if(_NombrePerfil === ""){
                            $._combustible.alert("error", "Campo vacio", "Debe ingresar un nombre de perfil")
                            return false 
                        }
                        if (_NombrePerfil.length < 3){
                            $._combustible.alert("error", "Nombre demasiado corto", "El nombre de perfil debe tener al menos 3 caracteres")
                            return false
                        }
                        return true 
                    }

                },
                DropDownList: {
                    Cargar: function(){                  
                        $("#@{@DropDownList_Perfiles}").kendoDropDownList({
                            dataTextField: "nombreProfile",
                            dataValueField: "perfilID",
                            index: 0,
                            change: function () {
                                let ID = $("#@{@DropDownList_Perfiles}").data("kendoDropDownList").value()
                                let Perfil =  $("#@{@DropDownList_Perfiles}").data("kendoDropDownList").text()
                                switch (ID) {
                                    case '0':
                                        $("#@{@TXT_Perfil}").text("Ingrese el nombre del nuevo perfil")
                                        $("#@{@Input_NombrePerfil}").val("")
                                        $.ModuloAdministracionPerfiles.Arbol.Data(parseInt(ID))
                                        break;
                                    @*case '2':
                                        $("#@{@TXT_Perfil}").text("Cambiar nombre de perfil")
                                        $("#@{@Input_NombrePerfil}").val(Perfil)
                                        $.ModuloAdministracionPerfiles.Arbol.Data(parseInt(ID))
                                        break;
                                    case '3':
                                        $("#@{@TXT_Perfil}").text("Cambiar nombre de perfil")
                                        $("#@{@Input_NombrePerfil}").val(Perfil)
                                        $.ModuloAdministracionPerfiles.Arbol.Data(parseInt(ID))
                                        break;
                                    case '4':
                                        $("#@{@TXT_Perfil}").text("Cambiar nombre de perfil")
                                        $("#@{@Input_NombrePerfil}").val(Perfil)
                                        $.ModuloAdministracionPerfiles.Arbol.Data(parseInt(ID))
                                        break;*@
                                    default:
                                        $("#@{@TXT_Perfil}").text("Cambiar nombre de perfil")
                                        $("#@{@Input_NombrePerfil}").val(Perfil)
                                        $.ModuloAdministracionPerfiles.Arbol.Data(parseInt(ID))
                                }
                            }
                        });
                    },
                    Data: function(){
                        $.get('@Url.Action("ObtenerPerfiles", "adAdministracionPerfiles")', function (perfiles) { 
                            perfiles.push({ nombreProfile: "Agregar nuevo perfil", perfilID: 0 })
                            //let perfil = perfiles[0].Nomb
                            $("#@{@DropDownList_Perfiles}").data("kendoDropDownList").dataSource.data(perfiles);
                            let Perfil =  $("#@{@DropDownList_Perfiles}").data("kendoDropDownList").text()
                            $("#@{@TXT_Perfil}").text("Cambiar nombre de perfil")
                            $("#@{@Input_NombrePerfil}").val(Perfil)
                        })
                    }
                },
                init: function () {
                    var _this = this
                    _this.Arbol.Cargar()
                    _this.DropDownList.Cargar()
                    _this.DropDownList.Data()
                    _this.Arbol.BTN_Guardar()
                }
            }
        })
        $.ModuloAdministracionPerfiles.init()
    })();
</script>