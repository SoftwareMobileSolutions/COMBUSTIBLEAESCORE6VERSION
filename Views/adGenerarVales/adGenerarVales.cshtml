@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = null;
}

<section>
    <div class="card">
        <div class="container-fluid p-lg-4 p-3">
            <div class="row">
                <div class="col-lg-12">
                    <h2 class="text-center">Generación de vales</h2>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4 col-12 order-1 order-lg-1 mb-2 mb-lg-0">
                    <label>Seleccione la placa</label>
                    <input id="DropDownListMobiles" class="DropDownList" />
                </div>
                <div class="col-lg-4 col-12 order-2 order-lg-2 mb-3 mb-lg-0">
                    <label>Seleccione el tipo de vale</label>
                    <input id="DropDownListTipoCarga" class="DropDownList" />
                </div>
                <div class="col-lg-4 col-12 d-flex align-items-end order-4 order-lg-3 mb-2 mb-lg-0">
                    <button type="button" class="btn btn-success w-100" id="BTN_GenerarVale"> <i class="bi bi-plus-circle"></i> Generar Vale</button>
                </div>
                <div class="col-lg-4 col-12 order-3 order-lg-4 mb-3 mb-lg-0" style="display:none;" id="DIV_DataExtraVale">
                    <label id="TXT_Total"></label>
                    <input type="text" class="form-control" id="Input_Total" />
                </div>
            </div>
            @*<div class="row py-lg-3" id="DIV_DataExtraVale" @*style="display:none;"@>
                <div class="col-lg-4 col-12 order-3">
                    <label id="TXT_Total"></label>
                    <input type="text" class="form-control" id="Input_Total" />
                </div>
            </div>*@
        </div>
    </div> 
    <div class="card">
        <div class="container-fluid p-lg-4 p-3">
            <div class="row">
                <div class="col-lg-12">
                    <h2 class="text-center">Vales Generados</h2>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3 mb-2 mb-lg-0">
                    <h4 class="text-start text-lg-center">Fecha inicio:</h4>
                    <input id="FechaIni" class="w-100" />
                </div>
                <div class="col-lg-3 offset-0 offset-lg-4 mb-3 mb-lg-0">
                    <h4 class="text-start text-lg-center">Fecha fin:</h4>
                    <input id="FechaFin" class="w-100" />
                </div>
                <div class="col-lg-2 d-flex align-items-end">
                    <button type="button" class="btn btn-success w-100" id="BTN_GenerarValesGRID"> Generar </button>
                </div>
            </div>
            <div class="row mt-lg-3">
                <div class="col-lg-12">
                    <div id="GridVales">

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<style>
    .DropDownList{
        height:37px
    }
</style>
<script>
    (function () {
        $.extend({
            Vale: {
                DropDownList: {
                    CargarDropDownList: function () {//Función para inicializar los DropdownList 

                        $("#DropDownListMobiles").kendoDropDownList({
                            filter: "contains",
                            dataTextField: "nombrePlaca",
                            dataValueField: "mobileID",
                            optionLabel: 'Seleccione una placa...',
                            select: function (e) { 
                                $.Vale.GenerarVale.CapacidadTanque = e.dataItem.capacidadTanque
                            }

                        });

                        $("#DropDownListTipoCarga").kendoDropDownList({
                            dataTextField: "descripcionTipoCarga",
                            dataValueField: "tipoCargaid",
                            optionLabel: 'Seleccione el tipo de vale...',
                            select: function (e) {//Función para mostrar y ocultar el input total 

                                let tipoCardaID = e.dataItem.tipoCargaid;
                                if (tipoCardaID === 2) {//Total en dolares
                                    $("#DIV_DataExtraVale").show(400)
                                    $("#TXT_Total").text("Ingrese el total en Dolares");
                                    $("#Input_Total").val("")
                                } else if (tipoCardaID === 3) {//Total en galones
                                    $("#DIV_DataExtraVale").show(400)
                                    $("#TXT_Total").text("Ingrese el total en Galones");
                                    $("#Input_Total").val("")
                                } else {
                                    $("#DIV_DataExtraVale").hide(400)
                                    $("#TXT_Total").text("");
                                    $("#Input_Total").val("")
                                }

                            }
                        });
                    },
                    DataDropDownList: function () {//Función para obtener la data de los DropdownList
                        $.get('@Url.Action("ObtenerMobileXUser", "adGenerarVales")', function (mobiles) {
                            //console.log(mobiles)
                            var data = []

                            mobiles.forEach((mobile) => {
                                data.push({ mobileID: mobile.mobileid, nombrePlaca: mobile.nombre + " - [" + mobile.placa + "]", capacidadTanque: mobile.capacidadTanque })
                            });
                            /*console.log("________________________________________")
                            console.log(data)*/
                            $("#DropDownListMobiles").data("kendoDropDownList").dataSource.data(data)
                        })

                        $.get('@Url.Action("ObtenerTipoCarga", "adGenerarVales")', function (tiposCarga) {
                            //console.log(tiposCarga)
                            $("#DropDownListTipoCarga").data("kendoDropDownList").dataSource.data(tiposCarga)
                        })
                    }
                },
                GenerarVale: {
                    CapacidadTanque: 0,
                    keypress: function () {//Se limita el ingreso de datos al input de total

                        $('#Input_Total').keypress(function (event) {

                            var Decimales = 2
                            let tipoCarga = $("#DropDownListTipoCarga").data("kendoDropDownList").value() 

                            if (tipoCarga === "2") {
                                Decimales = 2
                            }


                            if (tipoCarga === "3") {
                                Decimales = 4
                            }

                            var keyCode = event.which;
                            var inputValue = $(this).val();

                            if ((keyCode < 48 || keyCode > 57) && keyCode !== 46) {
                                event.preventDefault();
                            }

                            if (keyCode === 46 && inputValue.indexOf('.') !== -1) {
                                event.preventDefault();
                            }

                            if (inputValue.indexOf('.') !== -1 && inputValue.split('.')[1].length >= Decimales && keyCode !== 46) {
                                event.preventDefault();
                            }

                        });
                    },
                    Validaciones: function (mobileID, tipoCargaID, Total) {//Validaciones para generar vales
                        var capacidadTanque = $.Vale.GenerarVale.CapacidadTanque

                        //Se verifica si se selecciono un vehiculo
                        if (mobileID === '') {
                            $._combustible.alert('error', 'Error', 'Debe selecionar un vehículo')
                            return false
                        }

                        //Se verifica si se selcciono el tipo de carga 
                        if (tipoCargaID === '') {
                            $._combustible.alert('error', 'Error', 'Debe selecionar un tipo de carga')
                            return false
                        }

                        //Total en dolares
                        if (tipoCargaID === "2") {
                            if (Total === "") {
                                $._combustible.alert('error', 'Error', 'Debe insertar el total de dolares')
                                return false
                            }
                            if (parseFloat(Total) === 0) {
                                $._combustible.alert('error', 'Error', 'EL total de dolares no puede ser $0')
                                return false
                            }
                            if (parseFloat(Total) > 500) {
                                $._combustible.alert('error', 'Error', 'EL total de dolares no puede superar los $500')
                                return false
                            }
                        }

                        //Total en galones
                        if (tipoCargaID === "3") {
                            if (Total === "") {
                                $._combustible.alert('error', 'Error', 'Debe insertar el total de galones')
                                return false
                            }
                            if (parseFloat(Total) === 0) {
                                $._combustible.alert('error', 'Error', 'EL total de galones no puede ser 0')
                                return false
                            }
                            
                            if (capacidadTanque > 0) {
                                if (parseFloat(Total) > capacidadTanque) {
                                    $._combustible.alert('error', 'Error', 'EL total de galones no puede superar a la capacidad del tanque del vehiculo')
                                    return false
                                }
                            }
                        }
                        return true
                    },
                    BTN_GenerarVales: function () {//Función para generar vales 
                        var _this = this
                        $("#BTN_GenerarVale").on("click", function () {
                            _this.Validaciones()

                            //Se obtienen los datos del vale 
                            var mobileID = $("#DropDownListMobiles").data("kendoDropDownList").value()
                            var tipoCargaID = $("#DropDownListTipoCarga").data("kendoDropDownList").value()
                            var Total = $("#Input_Total").val()
                            var _TotalDolares = null
                            var _TotaGalones = null

                            if (_this.Validaciones(mobileID, tipoCargaID, Total) === true) {//Se llama a la función que valida la data y se evalua

                                if (tipoCargaID === "2") {
                                    _TotalDolares = parseFloat(Total)
                                } else if (tipoCargaID === "3") {
                                    _TotaGalones = parseFloat(Total)
                                }

                                let arg = {
                                    MobileID: parseInt(mobileID),
                                    FechaGeneracion: moment().format("YYYYMMDD HH:mm:ss:SSS"),
                                    TipoCargaValeID: parseInt(tipoCargaID),
                                    TotalDolares: _TotalDolares,
                                    TotaGalones: _TotaGalones
                                }

                                $.post('@Url.Action("GenerarVale", "adGenerarVales")', arg, function (mensaje) {
                                    mensaje = mensaje[0]
                                    if (mensaje.bandera === 1) {
                                        $._combustible.alert('success', 'Se generó el vale', mensaje.resultado)
                                        $("#DIV_DataExtraVale").hide(400)
                                        $("#TXT_Total").text("");
                                        $("#Input_Total").val("")
                                        let FechaIni = moment($("#FechaIni").data("kendoDateTimePicker").value()).format("YYYYMMDD HH:mm:ss:SSS")
                                        let FechaFin = moment().utc().format("YYYYMMDD HH:mm:ss:SSS");
                                        $("#FechaFin").data("kendoDateTimePicker").value(kendo.parseDate(moment().format("YYYY/MM/DD HH:mm:ss")));
                                        $("#DropDownListMobiles").data("kendoDropDownList").value("0")
                                        $("#DropDownListTipoCarga").data("kendoDropDownList").value("0")

                                        $.Grid.DataGrid(FechaIni, FechaFin)
                                    } else if (mensaje.bandera === 2) {
                                        $._combustible.alert('error', 'Exceso de vales', mensaje.resultado)
                                    } else {
                                        $._combustible.alert('error', 'Error', mensaje.resultado)
                                    }
                                })
                            }
                        });
                    }
                }
            },
            Grid:{
                CargarGrid: function () {//Función para inicializar el GRID 
                    var _this = this

                    //Se inicializan los DateTimePicker
                    $("#FechaIni").kendoDateTimePicker({
                        dateInput: true,
                        startTime: new Date(2023, 1, 3, 8, 30, 0),
                        endTime: new Date(2023, 1, 3, 17,00, 0)
                    });
                    $("#FechaFin").kendoDateTimePicker({
                        dateInput: true,
                        startTime: new Date(2023, 1, 3, 8, 30, 0),
                        endTime: new Date(2023, 1, 3, 17,00, 0)
                    });

                    //Se define la fecha de los DateTimePicker
                    $("#FechaIni").data("kendoDateTimePicker").value(kendo.parseDate(moment().subtract(30, 'days').format("YYYY/MM/DD HH:mm:ss")));
                    $("#FechaFin").data("kendoDateTimePicker").value(kendo.parseDate(moment().format("YYYY/MM/DD HH:mm:ss")));

                    var _this = this
                    $("#GridVales").html("");
                    $("#GridVales").kendoGrid({
                        dataSource: {
                            pageSize: 10
                        },
                        toolbar: ["search"],
                        columns: [
                            {
                                field: "numVale",
                                title: "N° Vale",
                                width: 100
                            },
                            {
                                field: "placa",
                                title: "Placa",
                                width: 150
                            },
                            {
                                field: "totalPrecio",
                                title: "Total $",
                                width: 150
                            },
                            {
                                field: "cantidadGalones",
                                title: "Cant. Gal.",
                                width: 150
                            },
                            {
                                field: "fechaGeneracion",
                                title: "Fecha de Generación",
                                width: 150
                            },
                            {
                                field: "estadoVale",
                                title: "Estado de Vale",
                                width: 150
                            },
                            {
                                field: "tipoCarga",
                                title: "Tipo de Carga",
                                width: 150
                            },
                            {
                                field: "usuarioGenerador",
                                title: "Usuario Genera",
                                width: 150
                            }
                        ],
                        dataBound: function (e) {
                            $("#GridVales > div span input").attr("placeholder", "Busqueda")
                        },
                        pageable: true,
                        mobile: "phone",
                    });
                    var FechaIni = moment().utc().subtract(30, 'days').format("YYYYMMDD HH:mm:ss")
                    var FechaFin = moment().utc().format("YYYYMMDD HH:mm:ss")
                    _this.DataGrid(FechaIni, FechaFin)
                },
                DataGrid: function (_FechaIni, _FechaFin) {//Función para obtener la data del GRID

                    let arg = {
                        FechaIni: _FechaIni,
                        FechaFin: _FechaFin
                    }

                    $.get('@Url.Action("ObtenerValesGenerados", "adGenerarVales")',arg, function (vales) {
                        vales.forEach((vale) => {
                            vale.fechaGeneracion = moment(vale.fechaGeneracion).format("DD/MM/YYYY HH:mm:ss")
                        })
                        $("#GridVales").data("kendoGrid").dataSource.data(vales);
                    })
                },
                BTN_GenerarVales: function () {//Función para obtener los vales
                    var _this = this
                    $("#BTN_GenerarValesGRID").on("click", function () {
                        var FechaIni = moment($("#FechaIni").data("kendoDateTimePicker").value()).format("YYYYMMDD HH:mm:ss:SSS")
                        var FechaFin = moment($("#FechaFin").data("kendoDateTimePicker").value()).format("YYYYMMDD HH:mm:ss:SSS")
                        _this.DataGrid(FechaIni, FechaFin)
                    });
                }
            },
            init: function () {
                var _this = this
                _this.Vale.DropDownList.CargarDropDownList()
                _this.Vale.DropDownList.DataDropDownList()
                _this.Vale.GenerarVale.BTN_GenerarVales()
                _this.Vale.GenerarVale.keypress()
                _this.Grid.CargarGrid()
                _this.Grid.BTN_GenerarVales()
            }
        })
        $.init()
    })();
</script>